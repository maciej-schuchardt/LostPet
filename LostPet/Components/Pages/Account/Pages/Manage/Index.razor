@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using LostPet.Data
@using Utils

@attribute [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

@attribute [Authorize]

<PageTitle>Moje dane</PageTitle>

<h3 style="color: white; text-align: center;">Moje dane</h3>
<div class="row justify-content-center">
    <div class="col-md-6">
        <form>
            <div class="form-floating mb-3">
                <input style="background-color: rgb(17, 39, 51); color: rgb(232, 237, 235) !important;" type="text" value="@username" class="form-control" disabled />
                <label for="username" class="form-label label-custom">Nazwa użytkownika</label>
            </div>
            <div class="form-floating mb-3">
                <input style="background-color: rgb(17, 39, 51); color: rgb(232, 237, 235) !important;" type="text" value="@email" class="form-control" disabled />
                <label for="email" class="form-label label-custom">Email</label>
            </div>
            <div class="form-floating mb-3">
                <input style="background-color: rgb(17, 39, 51); color: rgb(232, 237, 235) !important;" value="@phoneNumber" class="form-control" disabled/>
                <label for="phone-number" class="form-label label-custom">Numer telefonu</label>
            </div>
        </form>
    </div>
</div>
<style>
    .label-custom::after {
        background-color: inherit !important;
    }
</style>
@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;
    private string? email;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);
        email = await UserManager.GetEmailAsync(user);
    }
}
