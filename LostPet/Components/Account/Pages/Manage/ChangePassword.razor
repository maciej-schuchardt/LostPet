@page "/Account/Manage/ChangePassword"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using LostPet.Data

@attribute [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<ChangePassword> Logger

<PageTitle>Zmień hasło</PageTitle>

<h3 style="color: white; text-align: center;">Zmień hasło</h3>

<div class="row justify-content-center">
    <div class="col-md-6">
        <EditForm Model="Input" FormName="change-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <div class="form-floating mb-3">
                <InputText style="background-color: rgb(17, 39, 51); color: rgb(232, 237, 235) !important;" type="password" @bind-Value="Input.OldPassword" class="form-control" autocomplete="current-password" aria-required="true" placeholder="Please enter your old password." />
                <label style="color: #6c757d; !important" for="old-password" class="form-label label-custom">Stare hasło</label>
            </div>
            <div class="form-floating mb-3">
                <InputText style="background-color: rgb(17, 39, 51); color: rgb(232, 237, 235) !important;" type="password" @bind-Value="Input.NewPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Please enter your new password." />
                <label style="color: #6c757d; !important" for="new-password" class="form-label label-custom">Nowe hasło</label>
            </div>
            <div class="form-floating mb-3">
                <InputText style="background-color: rgb(17, 39, 51); color: rgb(232, 237, 235) !important;" type="password" @bind-Value="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Please confirm your new password." />
                <label style="color: #6c757d; !important" for="confirm-password" class="form-label label-custom">Potwierdź nowe hasło</label>
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary col-sm-12" style="background-color: rgb(0, 104, 74); border: 1px solid rgb(0, 237, 100);">
                Zaktualizuj hasło
            </button>
        </EditForm>
    </div>
</div>
<style>
    .label-custom::after {
        background-color: inherit !important;
    }
</style>
@code {
    private ApplicationUser user = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
    }

    private async Task OnValidSubmitAsync()
    {
        var changePasswordResult = await UserManager.ChangePasswordAsync(user, Input.OldPassword, Input.NewPassword);
        if (!changePasswordResult.Succeeded)
        {
            return;
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectTo("/");
    }

    private sealed class InputModel
    {
        [Required]
        [DataType(DataType.Password)]
        public string OldPassword { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string NewPassword { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string ConfirmPassword { get; set; } = "";
    }
}
